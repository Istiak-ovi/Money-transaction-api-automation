{
	"info": {
		"_postman_id": "45607bcd-676b-4bd7-8a11-02a319898b2f",
		"name": "Dmoney-transaction",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18855787",
		"_collection_link": "https://bold-space-550731.postman.co/workspace/9cf557df-6b24-43f7-8d25-f391ccb316d0/collection/18855787-45607bcd-676b-4bd7-8a11-02a319898b2f?action=share&source=collection_link&creator=18855787"
	},
	"item": [
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"var token = jsonData.token;\r",
							"pm.collectionVariables.set(\"token\",token)\r",
							"\r",
							"pm.test(\"Log in process succesful\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"Login successfully\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\":\"salman@roadtocareer.net\",\r\n    \"password\":\"1234\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://dmoney.roadtocareer.net/user/login",
					"protocol": "https",
					"host": [
						"dmoney",
						"roadtocareer",
						"net"
					],
					"path": [
						"user",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login failed wrong email",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// var jsonData = pm.response.json()\r",
							"// var token = jsonData.token;\r",
							"// pm.collectionVariables.set(\"token\",token)\r",
							"\r",
							"pm.test(\"Enter valid email\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"User not found\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\":\"salman@roadtocareer.nett\",\r\n    \"password\":\"1234\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://dmoney.roadtocareer.net/user/login",
					"protocol": "https",
					"host": [
						"dmoney",
						"roadtocareer",
						"net"
					],
					"path": [
						"user",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login failed wrong password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// var jsonData = pm.response.json()\r",
							"// var token = jsonData.token;\r",
							"// pm.collectionVariables.set(\"token\",token)\r",
							"\r",
							"pm.test(\"Enter correct password\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"Password incorrect\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\":\"salman@roadtocareer.net\",\r\n    \"password\":\"1233\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://dmoney.roadtocareer.net/user/login",
					"protocol": "https",
					"host": [
						"dmoney",
						"roadtocareer",
						"net"
					],
					"path": [
						"user",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Customer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var id = jsonData.user.id;\r",
							"var customer_phoneNumber = jsonData.user.phone_number;\r",
							"pm.collectionVariables.set(\"userId\",id);\r",
							"pm.collectionVariables.set(\"Customer_Phone_Number\",customer_phoneNumber);\r",
							"\r",
							"pm.test(\"User created successfully\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"User created\");\r",
							"});\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var randomId = _.random(10000,99999)\r",
							"var phoneNumber = \"0151\" + _.random(1000000,9999999)\r",
							"pm.collectionVariables.set(\"randomId\",randomId)\r",
							"pm.collectionVariables.set(\"Customer_Phone_Number\",phoneNumber)\r",
							"\r",
							"pm.environment.set(\"randomId\",randomId)\r",
							"pm.environment.set(\"Customer_Phone_Number\",phoneNumber)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{secretKey}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"{{$randomFullName}}\",\r\n    \"email\":\"user{{randomId}}@test.com\",\r\n    \"password\":\"1234\",\r\n    \"phone_number\":\"{{Customer_Phone_Number}}\",\r\n    \"nid\":\"2246523\",\r\n    \"role\":\"Customer\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/user/create",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Customer failed existing email",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// var jsonData = pm.response.json();\r",
							"// var id = jsonData.user.id;\r",
							"// var customer_phoneNumber = jsonData.user.phone_number;\r",
							"// pm.collectionVariables.set(\"userId\",id);\r",
							"// pm.collectionVariables.set(\"Customer_Phone_Number\",customer_phoneNumber);\r",
							"pm.test(\"Try another email\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"User already exists\");\r",
							"});\r",
							"pm.test(\"Status code is 208\", function () {\r",
							"    pm.response.to.have.status(208);\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var randomId = _.random(10000,99999)\r",
							"var Customer_Phone_Number = \"0151\" + _.random(1000000,9999999)\r",
							"// pm.collectionVariables.set(\"randomId\",randomId)\r",
							"// pm.collectionVariables.set(\"Customer_Phone_Number\",phoneNumber)\r",
							"\r",
							"// pm.environment.set(\"randomId\",randomId)\r",
							"// pm.environment.set(\"Customer_Phone_Number\",phoneNumber)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{secretKey}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"{{$randomFullName}}\",\r\n    \"email\":\"user58214@test.com\",\r\n    \"password\":\"1234\",\r\n    \"phone_number\":\"{{Customer_Phone_Number}}\",\r\n    \"nid\":\"2246523\",\r\n    \"role\":\"Customer\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/user/create",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Customer failed existing phoneNumber",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// var jsonData = pm.response.json();\r",
							"// var id = jsonData.user.id;\r",
							"// var customer_phoneNumber = jsonData.user.phone_number;\r",
							"// pm.collectionVariables.set(\"userId\",id);\r",
							"// pm.collectionVariables.set(\"Customer_Phone_Number\",customer_phoneNumber);\r",
							"pm.test(\"Try another phone number\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"User already exists\");\r",
							"});\r",
							"pm.test(\"Status code is 208\", function () {\r",
							"    pm.response.to.have.status(208);\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var randomId = _.random(10000,99999)\r",
							"var Customer_Phone_Number = \"0151\" + _.random(1000000,9999999)\r",
							"\r",
							"// pm.collectionVariables.set(\"randomId\",randomId)\r",
							"// pm.collectionVariables.set(\"Customer_Phone_Number\",phoneNumber)\r",
							"\r",
							"// pm.environment.set(\"randomId\",randomId)\r",
							"// pm.environment.set(\"Customer_Phone_Number\",phoneNumber)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{secretKey}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"{{$randomFullName}}\",\r\n    \"email\":\"user{{randomId}}@test.com\",\r\n    \"password\":\"1234\",\r\n    \"phone_number\":\"01511248127\",\r\n    \"nid\":\"2246523\",\r\n    \"role\":\"Customer\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/user/create",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Customer by Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User found\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"User found\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{secretKey}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://dmoney.roadtocareer.net/user/search/id/{{userId}}",
					"protocol": "https",
					"host": [
						"dmoney",
						"roadtocareer",
						"net"
					],
					"path": [
						"user",
						"search",
						"id",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Customer by Id failed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Try with valid ID\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"User not found\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{secretKey}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://dmoney.roadtocareer.net/user/search/id/{{userFd}}",
					"protocol": "https",
					"host": [
						"dmoney",
						"roadtocareer",
						"net"
					],
					"path": [
						"user",
						"search",
						"id",
						"{{userFd}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "User List",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"showing user list\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"User list\");\r",
							"});\r",
							"\r",
							"/* pm.test(\"User Data is showing\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.users[0].id).to.eql(22716);\r",
							"});  */"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "Authorization",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "javascript"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/user/list",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"list"
					]
				}
			},
			"response": []
		},
		{
			"name": "User List not found wrong token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Token is invalid\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.error.message).to.contains(\"Token expired!\");\r",
							"});\r",
							"\r",
							"/* pm.test(\"User Data is showing\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.users[0].id).to.eql(22716);\r",
							"});  */"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "oooo",
							"type": "string"
						},
						{
							"key": "key",
							"value": "Authorization",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "oooo"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "javascript"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/user/list",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"list"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Agent",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var id = jsonData.user.id;\r",
							"var phoneNumber = jsonData.user.phone_number;\r",
							"pm.collectionVariables.set(\"Agent_Id\",id);\r",
							"pm.collectionVariables.set(\"Agent_Phone_Number\",phoneNumber); \r",
							"\r",
							"pm.test(\"Agent created successfully\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"User created\");\r",
							"});\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var randomId = _.random(10000,99999)\r",
							"var phoneNumber = \"5001\" + _.random(1000000,9999999)\r",
							"pm.collectionVariables.set(\"randomId\",randomId)\r",
							"pm.collectionVariables.set(\"Agent_Phone_Number\",phoneNumber)\r",
							"\r",
							"pm.environment.set(\"randomId\",randomId)\r",
							"pm.environment.set(\"phoneNumber\",phoneNumber)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{secretKey}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"Agent {{$randomFullName}}\",\r\n    \"email\":\"agent{{randomId}}@test.com\",\r\n    \"password\":\"1234\",\r\n    \"phone_number\":\"{{Agent_Phone_Number}}\",\r\n    \"nid\":\"2246523\",\r\n    \"role\":\"Agent\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/user/create",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Agent failed existing email",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// var jsonData = pm.response.json();\r",
							"// var id = jsonData.user.id;\r",
							"// var phoneNumber = jsonData.user.phone_number;\r",
							"// pm.collectionVariables.set(\"Agent_Id\",id);\r",
							"// pm.collectionVariables.set(\"Agent_Phone_Number\",phoneNumber); \r",
							"\r",
							"pm.test(\"Try with another email\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"User already exists\");\r",
							"});\r",
							"pm.test(\"Status code is 208\", function () {\r",
							"    pm.response.to.have.status(208);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var randomId = _.random(10000,99999)\r",
							"var Agent_Phone_Number = \"5001\" + _.random(1000000,9999999)\r",
							"// pm.collectionVariables.set(\"randomId\",randomId)\r",
							"// pm.collectionVariables.set(\"Agent_Phone_Number\",phoneNumber)\r",
							"\r",
							"// pm.environment.set(\"randomId\",randomId)\r",
							"// pm.environment.set(\"phoneNumber\",phoneNumber)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{secretKey}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"Agent {{$randomFullName}}\",\r\n    \"email\":\"agent83482@test.com\",\r\n    \"password\":\"1234\",\r\n    \"phone_number\":\"{{Agent_Phone_Number}}\",\r\n    \"nid\":\"2246523\",\r\n    \"role\":\"Agent\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/user/create",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Agent failed existing phoneNumber",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// var jsonData = pm.response.json();\r",
							"// var id = jsonData.user.id;\r",
							"// var phoneNumber = jsonData.user.phone_number;\r",
							"// pm.collectionVariables.set(\"Agent_Id\",id);\r",
							"// pm.collectionVariables.set(\"Agent_Phone_Number\",phoneNumber); \r",
							"\r",
							"pm.test(\"Try with another email\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"User already exists\");\r",
							"});\r",
							"pm.test(\"Status code is 208\", function () {\r",
							"    pm.response.to.have.status(208);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var randomId = _.random(10000,99999)\r",
							"var Agent_Phone_Number = \"5001\" + _.random(1000000,9999999)\r",
							"// pm.collectionVariables.set(\"randomId\",randomId)\r",
							"// pm.collectionVariables.set(\"Agent_Phone_Number\",phoneNumber)\r",
							"\r",
							"// pm.environment.set(\"randomId\",randomId)\r",
							"// pm.environment.set(\"phoneNumber\",phoneNumber)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{secretKey}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"Agent {{$randomFullName}}\",\r\n    \"email\":\"agent{{randomId}}@test.com\",\r\n    \"password\":\"1234\",\r\n    \"phone_number\":\"50016216212\",\r\n    \"nid\":\"2246523\",\r\n    \"role\":\"Agent\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/user/create",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Deposit to Agent",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Deposit successful\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"Deposit successful\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{secretKey}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\": \"SYSTEM\",\r\n    \"to_account\": {{Agent_Phone_Number}},\r\n    \"amount\": 10000\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/transaction/deposit",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"transaction",
						"deposit"
					]
				}
			},
			"response": []
		},
		{
			"name": "Failed Deposit to Agent max limit exceeded",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Maximum limit crossed\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"Maximum limit exceeded. You cant deposit more than 10000 tk\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{secretKey}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\": \"SYSTEM\",\r\n    \"to_account\": {{Agent_Phone_Number}},\r\n    \"amount\": 10000\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/transaction/deposit",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"transaction",
						"deposit"
					]
				}
			},
			"response": []
		},
		{
			"name": "Failed Deposit to Agent wrong phoneNumber",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Phone number is incorrect\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"Account does not exist\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{secretKey}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\": \"SYSTEM\",\r\n    \"to_account\": \"01703000000\",\r\n    \"amount\": 10000\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/transaction/deposit",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"transaction",
						"deposit"
					]
				}
			},
			"response": []
		},
		{
			"name": "Deposit Agent to Customer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Deposit is successful\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"Deposit successful\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{secretKey}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\": \"{{Agent_Phone_Number}}\",\r\n    \"to_account\": \"{{Customer_Phone_Number}}\",\r\n    \"amount\": 1000\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/transaction/deposit",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"transaction",
						"deposit"
					]
				}
			},
			"response": []
		},
		{
			"name": "Failed Deposit Agent to Customer minimum amount",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Minimum deposit\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"Minimum deposit amount 10 tk and maximum deposit amount 10000 tk\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{secretKey}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\": \"{{Agent_Phone_Number}}\",\r\n    \"to_account\": \"{{Customer_Phone_Number}}\",\r\n    \"amount\": 5\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/transaction/deposit",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"transaction",
						"deposit"
					]
				}
			},
			"response": []
		},
		{
			"name": "Failed Deposit Agent to Customer wrong phoneNumber",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Account does not exist\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"Account does not exist\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{secretKey}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\": \"{{Agent_Phone_Number}}\",\r\n    \"to_account\": \"01703000000\",\r\n    \"amount\": 1000\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/transaction/deposit",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"transaction",
						"deposit"
					]
				}
			},
			"response": []
		},
		{
			"name": "Money withdraw by customer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Customer Withdraw successful\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"Withdraw successful\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{secretKey}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\": \"{{Customer_Phone_Number}}\",\r\n    \"to_account\": \"{{Agent_Phone_Number}}\",\r\n    \"amount\": 100\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/transaction/withdraw",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"transaction",
						"withdraw"
					]
				}
			},
			"response": []
		},
		{
			"name": "Failed Money withdraw by customer insufficient balance",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Insufficient balance\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"Insufficient balance\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{secretKey}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\": \"{{Customer_Phone_Number}}\",\r\n    \"to_account\": \"{{Agent_Phone_Number}}\",\r\n    \"amount\": 20000\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/transaction/withdraw",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"transaction",
						"withdraw"
					]
				}
			},
			"response": []
		},
		{
			"name": "Failed Money withdraw by customer minimum amount",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Minimum withdraw amount 10 tk\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"Minimum withdraw amount 10 tk\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{secretKey}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\": \"{{Customer_Phone_Number}}\",\r\n    \"to_account\": \"{{Agent_Phone_Number}}\",\r\n    \"amount\": 5\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/transaction/withdraw",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"transaction",
						"withdraw"
					]
				}
			},
			"response": []
		},
		{
			"name": "Failed Money withdraw by customer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Agent phone number is incorrect\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"Account does not exist\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{secretKey}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\": \"{{Customer_Phone_Number}}\",\r\n    \"to_account\": \"01703000000\",\r\n    \"amount\": 100\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/transaction/withdraw",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"transaction",
						"withdraw"
					]
				}
			},
			"response": []
		},
		{
			"name": "Send Money",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Send money successful\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"Send money successful\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{secretKey}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\": \"{{Customer_Phone_Number}}\",\r\n    \"to_account\": \"01686606909\",\r\n    \"amount\": 50\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/transaction/sendmoney",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"transaction",
						"sendmoney"
					]
				}
			},
			"response": []
		},
		{
			"name": "Failed Send Money minimum amount",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Minimum amount 10 tk\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"Minimum amount 10 tk\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{secretKey}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\": \"{{Customer_Phone_Number}}\",\r\n    \"to_account\": \"01686606909\",\r\n    \"amount\": 5\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/transaction/sendmoney",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"transaction",
						"sendmoney"
					]
				}
			},
			"response": []
		},
		{
			"name": "Failed Send Money insufficient balance",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Insufficient balance\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"Insufficient balance\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{secretKey}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\": \"{{Customer_Phone_Number}}\",\r\n    \"to_account\": \"01686606909\",\r\n    \"amount\": 15000\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/transaction/sendmoney",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"transaction",
						"sendmoney"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check Agent Balance",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Agent balance found\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"User balance\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{secretKey}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/transaction/balance/{{Agent_Phone_Number}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"transaction",
						"balance",
						"{{Agent_Phone_Number}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check Customer Balance",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Customer balance found\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"User balance\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{secretKey}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/transaction/balance/{{Customer_Phone_Number}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"transaction",
						"balance",
						"{{Customer_Phone_Number}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Customer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"\r",
							"pm.test(\"User updated successfully\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"User updated\");\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// var randomId = _.random(10000,99999)\r",
							"// var phoneNumber = \"0151\" + _.random(1000000,9999999)\r",
							"// pm.collectionVariables.set(\"randomId\",randomId)\r",
							"// pm.collectionVariables.set(\"Customer_Phone_Number\",phoneNumber)\r",
							"\r",
							"// pm.environment.set(\"randomId\",randomId)\r",
							"// pm.environment.set(\"Customer_Phone_Number\",phoneNumber)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{secretKey}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"Istiak Ahamed\",\r\n    \"email\":\"istiak02364@test.com\",\r\n    \"password\":\"1235\",\r\n    \"phone_number\":\"01703046469\",\r\n    \"nid\":\"2245521\",\r\n    \"role\":\"Customer\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/user/update/{{userId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"update",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Customer by patch",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// var jsonData = pm.response.json();\r",
							"// var id = jsonData.user.id;\r",
							"// var customer_phoneNumber = jsonData.user.phone_number;\r",
							"// pm.collectionVariables.set(\"userId\",id);\r",
							"// pm.collectionVariables.set(\"Customer_Phone_Number\",customer_phoneNumber);\r",
							"\r",
							"pm.test(\"User updated successfully\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"User updated successfully\");\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// var randomId = _.random(10000,99999)\r",
							"// var phoneNumber = \"0151\" + _.random(1000000,9999999)\r",
							"// pm.collectionVariables.set(\"randomId\",randomId)\r",
							"// pm.collectionVariables.set(\"Customer_Phone_Number\",phoneNumber)\r",
							"\r",
							"// pm.environment.set(\"randomId\",randomId)\r",
							"// pm.environment.set(\"Customer_Phone_Number\",phoneNumber)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{secretKey}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\":\"istiak16344@test.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/user/update/{{userId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"update",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User deleted\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"User deleted successfully\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{secretKey}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://dmoney.roadtocareer.net/user/delete/{{userId}}",
					"protocol": "https",
					"host": [
						"dmoney",
						"roadtocareer",
						"net"
					],
					"path": [
						"user",
						"delete",
						"{{userId}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://dmoney.roadtocareer.net",
			"type": "string"
		},
		{
			"key": "token",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZGVudGlmaWVyIjoic2FsbWFuQHJvYWR0b2NhcmVlci5uZXQiLCJwYXNzd29yZCI6IjEyMzQiLCJpYXQiOjE3MTY3NDg4NzQsImV4cCI6MTcxNjc1MjQ3NH0.y4EteLUQJP78unqKDwCmL4eBJxpPj5MlODVw9TcFpJw"
		},
		{
			"key": "randomId",
			"value": 47889
		},
		{
			"key": "phoneNumber",
			"value": "50017181875"
		},
		{
			"key": "secretKey",
			"value": "ROADTOSDET",
			"type": "string"
		},
		{
			"key": "userId",
			"value": 2480
		},
		{
			"key": "Phone_Number",
			"value": "01517612378"
		},
		{
			"key": "Agent_Id",
			"value": 2481
		},
		{
			"key": "Agent_Phone_Number",
			"value": "50017181875"
		},
		{
			"key": "Customer_Phone_Number",
			"value": "01512264457"
		}
	]
}